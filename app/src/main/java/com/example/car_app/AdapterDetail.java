package com.example.car_app;import android.util.Log;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.CheckBox;import android.widget.TextView;import androidx.annotation.NonNull;import androidx.recyclerview.widget.RecyclerView;import java.util.ArrayList;public class AdapterDetail extends RecyclerView.Adapter<AdapterDetail.ViewHolder> {    private ArrayList<CarDetail> carListDetail;    Utils utils = new Utils();    public void changelist(ArrayList<CarDetail> carDel) {        this.carListDetail=carDel;    }    public AdapterDetail(ArrayList<CarDetail> carListDetail) {        this.carListDetail = carListDetail;    }    @NonNull    @Override    public AdapterDetail.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {        View view= LayoutInflater.from(parent.getContext()).inflate(R.layout.item_details,parent,false);        return new ViewHolder(view);    }    @Override    public void onBindViewHolder(@NonNull ViewHolder holder, int position) {        holder.txtNumDetail.setText(carListDetail.get(position).getCarNumDetail()+"");        holder.txtDescDetail.setText(carListDetail.get(position).getCarDescDetail());        if(carListDetail.get(position).getArgu()=="Yes"){            holder.cB_NoIssue.isChecked();            holder.cB_NoIssue.setChecked(true);        }        if(carListDetail.get(position).getArgu()=="No"){            holder.cB_Issue.isChecked();            holder.cB_Issue.setChecked(true);        }        if(carListDetail.get(position).getArgu()=="NA"){            holder.cB_NA.isChecked();            holder.cB_NA.setChecked(true);        }        holder.cB_NoIssue.setOnCheckedChangeListener((buttonView, isChecked) -> {            if(isChecked) {                carListDetail.get(position).setArgu("Yes");                holder.cB_NoIssue.setChecked(true);                holder.cB_Issue.setChecked(false);                holder.cB_NA.setChecked(false);                holder.cB_NoIssue.setEnabled(false);                holder.cB_Issue.setEnabled(true);                holder.cB_NA.setEnabled(true);            }        });        holder.cB_Issue.setOnCheckedChangeListener((buttonView, isChecked) -> {            if(isChecked) {                carListDetail.get(position).setArgu("No");                holder.cB_Issue.setChecked(true);                holder.cB_NA.setChecked(false);                holder.cB_NoIssue.setChecked(false);                holder.cB_NoIssue.setEnabled(true);                holder.cB_NA.setEnabled(true);                holder.cB_Issue.setEnabled(false);            }        });        holder.cB_NA.setOnCheckedChangeListener((buttonView, isChecked) -> {            if(isChecked) {                carListDetail.get(position).setArgu("NA");                holder.cB_NA.setChecked(true);                holder.cB_Issue.setChecked(false);                holder.cB_NoIssue.setChecked(false);                holder.cB_NA.setEnabled(false);                holder.cB_NoIssue.setEnabled(true);                holder.cB_Issue.setEnabled(true);            }        });    }    @Override    public int getItemCount() {        return carListDetail.size();    }    public class ViewHolder extends RecyclerView.ViewHolder {        private TextView txtDescDetail,txtNumDetail;        private CheckBox cB_NoIssue, cB_Issue, cB_NA;        public ViewHolder(@NonNull View itemView) {            super(itemView);            txtDescDetail=itemView.findViewById(R.id.txtDescDetail);            txtNumDetail=itemView.findViewById(R.id.txtNumDetail);            cB_NoIssue = itemView.findViewById(R.id.cB_NoIssue);            cB_Issue = itemView.findViewById(R.id.cB_Issue);            cB_NA = itemView.findViewById(R.id.cB_NA);        }    }}