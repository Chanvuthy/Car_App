package com.example.car_app;import androidx.annotation.NonNull;import androidx.annotation.RequiresApi;import androidx.appcompat.app.AppCompatActivity;import androidx.appcompat.widget.Toolbar;import androidx.recyclerview.widget.DefaultItemAnimator;import androidx.recyclerview.widget.LinearLayoutManager;import androidx.recyclerview.widget.RecyclerView;import android.app.Activity;import android.app.Instrumentation;import android.content.Intent;import android.os.Build;import android.os.Bundle;import android.text.Editable;import android.text.TextWatcher;import android.view.Menu;import android.view.MenuItem;import android.view.View;import android.widget.Button;import android.widget.CheckBox;import android.widget.CompoundButton;import android.widget.EditText;import android.widget.TextView;import android.widget.Toast;import com.firebase.ui.auth.AuthUI;import com.google.android.gms.auth.api.signin.GoogleSignIn;import com.google.android.gms.auth.api.signin.GoogleSignInClient;import com.google.android.gms.auth.api.signin.GoogleSignInOptions;import com.google.android.gms.tasks.OnCompleteListener;import com.google.android.gms.tasks.Task;import com.google.firebase.auth.FirebaseAuth;import com.google.firebase.auth.FirebaseUser;import java.util.ArrayList;public class MainActivity extends AppCompatActivity implements CompoundButton.OnCheckedChangeListener {    private Toolbar toolbar;    private long backPressTime;    private RecyclerView carRecyclerView;    private CheckBox cBAll, cBPassed, cBFailed;    private TextView txtTotal;    private EditText txtSearchItem;    private MyAdapter adapter;    private Button btnLogOut;    GoogleSignInClient googleSignInClient;    Utils utils = new Utils();    private FirebaseAuth mAuth;    private ArrayList filterCheck(String key) {        switch (key) {            case "ALL":                utils.setTemp(utils.getCarsList());                break;            case "PASS":                utils.initCarPassed();                break;            case "FAIL":                utils.initCarFailed();                break;            default:        }        return utils.getTemp();    }    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        find_Id();        mAuth = FirebaseAuth.getInstance();        googleSignInClient = GoogleSignIn.getClient(MainActivity.this,                GoogleSignInOptions.DEFAULT_SIGN_IN);//        btnLogOut.setOnClickListener(new View.OnClickListener() {//            @Override//            public void onClick(View v) {//                try {//                    AuthUI.getInstance().signOut(MainActivity.this)//                            .addOnCompleteListener(new OnCompleteListener<Void>() {//                                @Override//                                public void onComplete(@NonNull Task<Void> task) {//                                    if(task.isSuccessful()){//                                        startActivity(new Intent(MainActivity.this,LogInActivity.class));////                                        setContentView(R.layout.activity_log_in);//                                        finish();//                                        Toast.makeText(MainActivity.this, "Log Out Successfully", Toast.LENGTH_SHORT).show();//                                    }else{//                                        Toast.makeText(MainActivity.this, "Log Out Failed", Toast.LENGTH_SHORT).show();//                                    }//                                }//                            });////                    googleSignInClient.signOut().addOnCompleteListener(new OnCompleteListener<Void>() {//                        @Override//                        public void onComplete(@NonNull Task<Void> task) {//                            if (task.isSuccessful()) {//                                try {//                                    mAuth.signOut();//                                    startActivity(new Intent(MainActivity.this,LogInActivity.class));////                                    setContentView(R.layout.activity_log_in);//                                    Toast.makeText(MainActivity.this, "Log Out Successfully", Toast.LENGTH_SHORT).show();//                                    finish();//                                } catch (Exception e) {//                                    e.printStackTrace();//                                }//                            }else{//                                Toast.makeText(MainActivity.this, "Log Out Failed", Toast.LENGTH_SHORT).show();//                            }//                        }//                    });////                }catch (Exception e){//                    e.printStackTrace();//                }//            }//        });        txtSearchItem.addTextChangedListener(new TextWatcher() {            @Override            public void beforeTextChanged(CharSequence s, int start, int count, int after) {            }            @Override            public void onTextChanged(CharSequence s, int start, int before, int count) {            }            @Override            public void afterTextChanged(Editable s) {                filter(s.toString());            }        });        utils.tempDataTesting();        txtTotal.setText(utils.getCarsList().size() + "");        cBAll.setEnabled(false);        cBAll.isChecked();        adapter = new MyAdapter(utils.getCarsList());        carRecyclerView.setAdapter(adapter);        carRecyclerView.setLayoutManager(new LinearLayoutManager(this));        cBAll.setOnCheckedChangeListener(this);        cBPassed.setOnCheckedChangeListener(this);        cBFailed.setOnCheckedChangeListener(this);        toolbar = findViewById(R.id.toolBar);        setSupportActionBar(toolbar);    }    @Override    public boolean onCreateOptionsMenu(Menu menu) {        getMenuInflater().inflate(R.menu.menu,menu);        return true;    }    @Override    public boolean onOptionsItemSelected(@NonNull MenuItem item) {        int id = item.getItemId();        if(id == R.id.logOutBar){            try {                AuthUI.getInstance().signOut(MainActivity.this)                        .addOnCompleteListener(new OnCompleteListener<Void>() {                            @Override                            public void onComplete(@NonNull Task<Void> task) {                                if(task.isSuccessful()){                                    startActivity(new Intent(MainActivity.this,LogInActivity.class));//                                        setContentView(R.layout.activity_log_in);                                    finish();                                    Toast.makeText(MainActivity.this, "Log Out Successfully", Toast.LENGTH_SHORT).show();                                }else{                                    Toast.makeText(MainActivity.this, "Log Out Failed", Toast.LENGTH_SHORT).show();                                }                            }                        });                googleSignInClient.signOut().addOnCompleteListener(new OnCompleteListener<Void>() {                    @Override                    public void onComplete(@NonNull Task<Void> task) {                        if (task.isSuccessful()) {                            try {                                mAuth.signOut();                                startActivity(new Intent(MainActivity.this,LogInActivity.class));//                                    setContentView(R.layout.activity_log_in);                                Toast.makeText(MainActivity.this, "Log Out Successfully", Toast.LENGTH_SHORT).show();                                finish();                            } catch (Exception e) {                                e.printStackTrace();                            }                        }else{                            Toast.makeText(MainActivity.this, "Log Out Failed", Toast.LENGTH_SHORT).show();                        }                    }                });            }catch (Exception e){                e.printStackTrace();            }        }        return true;    }    private void filter(String text) {        ArrayList<Car> filteredList = new ArrayList<>();        for(Car item : utils.getCarsList()){            if(item.getTitle().toLowerCase().contains(text.toLowerCase())){                filteredList.add(item);            }        }        adapter.filterList(filteredList);    }    public EditText getTxtSearchItem() {        return txtSearchItem;    }    public void setTxtSearchItem(EditText txtSearchItem) {        this.txtSearchItem = txtSearchItem;    }    @Override    public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {        if (isChecked == true) {            switch (buttonView.getId()) {                case R.id.cBPassed:                    cBAll.setEnabled(true);                    cBFailed.setEnabled(true);                    cBPassed.setEnabled(false);                    cBAll.setChecked(false);                    cBFailed.setChecked(false);                    utils.initCarPassed();                    txtTotal.setText(utils.getNewCarPass().size() + "");                    break;                case R.id.cBFailed:                    cBAll.setEnabled(true);                    cBFailed.setEnabled(false);                    cBPassed.setEnabled(true);                    cBAll.setChecked(false);                    cBPassed.setChecked(false);                    utils.initCarFailed();                    txtTotal.setText(utils.getNewCarFail().size() + "");                    break;                case R.id.cBAll:                    cBAll.setEnabled(false);                    cBFailed.setEnabled(true);                    cBPassed.setEnabled(true);                    cBPassed.setChecked(false);                    cBFailed.setChecked(false);                    txtTotal.setText(utils.getCarsList().size() + "");                    break;            }            adapter.changeList(filterCheck(buttonView.getTag().toString()));            adapter.notifyItemRangeRemoved(0, adapter.getItemCount());            adapter.notifyDataSetChanged();        }    }    private void find_Id(){        carRecyclerView = findViewById(R.id.carRecView);        cBAll = findViewById(R.id.cBAll);        cBPassed = findViewById(R.id.cBPassed);        cBFailed = findViewById(R.id.cBFailed);        txtTotal = findViewById(R.id.txtTotal);        txtSearchItem=findViewById(R.id.txtSearchItem);//        btnLogOut = findViewById(R.id.btnLogOut);    }    @RequiresApi(api = Build.VERSION_CODES.O)    @Override    public void onBackPressed() {        if(backPressTime + 2000 > System.currentTimeMillis()){            Intent intent = new Intent(Intent.ACTION_MAIN);            intent.addCategory(Intent.CATEGORY_HOME);            intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK);            startActivity(intent);            finish();            System.exit(0);        }else{            Toast.makeText(MainActivity.this,"Press back again to exit",Toast.LENGTH_SHORT).show();        }        backPressTime = System.currentTimeMillis();    }}