package com.example.car_app;import androidx.annotation.NonNull;import androidx.appcompat.app.AppCompatActivity;import androidx.recyclerview.widget.DefaultItemAnimator;import androidx.recyclerview.widget.LinearLayoutManager;import androidx.recyclerview.widget.RecyclerView;import android.os.Bundle;import android.text.Editable;import android.text.TextWatcher;import android.view.View;import android.widget.CheckBox;import android.widget.CompoundButton;import android.widget.EditText;import android.widget.TextView;import android.widget.Toast;import java.util.ArrayList;public class MainActivity extends AppCompatActivity implements CompoundButton.OnCheckedChangeListener {    private RecyclerView carRecyclerView;    private CheckBox cBAll, cBPassed, cBFailed;    private TextView txtTotal;    private EditText txtSearchItem;    private MyAdapter adapter;    Utils utils = new Utils();    private ArrayList filterCheck(String key) {        switch (key) {            case "ALL":                utils.setTemp(utils.getCarsList());                break;            case "PASS":                utils.initCarPassed();                break;            case "FAIL":                utils.initCarFailed();                break;            default:        }        return utils.getTemp();    }    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        carRecyclerView = findViewById(R.id.carRecView);        cBAll = findViewById(R.id.cBAll);        cBPassed = findViewById(R.id.cBPassed);        cBFailed = findViewById(R.id.cBFailed);        txtTotal = findViewById(R.id.txtTotal);        txtSearchItem=findViewById(R.id.txtSearchItem);        txtSearchItem.addTextChangedListener(new TextWatcher() {            @Override            public void beforeTextChanged(CharSequence s, int start, int count, int after) {            }            @Override            public void onTextChanged(CharSequence s, int start, int before, int count) {            }            @Override            public void afterTextChanged(Editable s) {                filter(s.toString());            }        });        utils.tempDataTesting();        txtTotal.setText(utils.getCarsList().size() + "");        cBAll.setEnabled(false);        cBAll.isChecked();        adapter = new MyAdapter(utils.getCarsList());        carRecyclerView.setAdapter(adapter);        carRecyclerView.setLayoutManager(new LinearLayoutManager(this));        cBAll.setOnCheckedChangeListener(this);        cBPassed.setOnCheckedChangeListener(this);        cBFailed.setOnCheckedChangeListener(this);    }    private void filter(String text) {        ArrayList<Car> filteredList = new ArrayList<>();        for(Car item : utils.getCarsList()){            if(item.getTitle().toLowerCase().contains(text.toLowerCase())){                filteredList.add(item);            }        }        adapter.filterList(filteredList);    }    public EditText getTxtSearchItem() {        return txtSearchItem;    }    public void setTxtSearchItem(EditText txtSearchItem) {        this.txtSearchItem = txtSearchItem;    }    @Override    public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {        if (isChecked == true) {            switch (buttonView.getId()) {                case R.id.cBPassed:                    cBAll.setEnabled(true);                    cBFailed.setEnabled(true);                    cBPassed.setEnabled(false);                    cBAll.setChecked(false);                    cBFailed.setChecked(false);                    utils.initCarPassed();                    txtTotal.setText(utils.getNewCarPass().size() + "");                    break;                case R.id.cBFailed:                    cBAll.setEnabled(true);                    cBFailed.setEnabled(false);                    cBPassed.setEnabled(true);                    cBAll.setChecked(false);                    cBPassed.setChecked(false);                    utils.initCarFailed();                    txtTotal.setText(utils.getNewCarFail().size() + "");                    break;                case R.id.cBAll:                    cBAll.setEnabled(false);                    cBFailed.setEnabled(true);                    cBPassed.setEnabled(true);                    cBPassed.setChecked(false);                    cBFailed.setChecked(false);                    txtTotal.setText(utils.getCarsList().size() + "");                    break;            }            adapter.changeList(filterCheck(buttonView.getTag().toString()));            adapter.notifyItemRangeRemoved(0, adapter.getItemCount());            adapter.notifyDataSetChanged();        }    }}