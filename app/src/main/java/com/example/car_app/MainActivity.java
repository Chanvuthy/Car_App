package com.example.car_app;import androidx.annotation.NonNull;import androidx.appcompat.app.AppCompatActivity;import androidx.recyclerview.widget.DefaultItemAnimator;import androidx.recyclerview.widget.LinearLayoutManager;import androidx.recyclerview.widget.RecyclerView;import android.os.Bundle;import android.view.View;import android.widget.CheckBox;import android.widget.CompoundButton;import android.widget.TextView;import android.widget.Toast;import java.util.ArrayList;public class MainActivity extends AppCompatActivity implements CompoundButton.OnCheckedChangeListener {    private RecyclerView carRecyclerView;    private CheckBox cBAll, cBPassed, cBFailed;    private TextView txtTotal;    private int sizeOfArray;    private ArrayList<Car> carsList = new ArrayList<>();    private ArrayList<Car> carListPassed=new ArrayList<>();    private ArrayList<Car> carListFailed = new ArrayList<>();    private  MyAdapter adapter;    private ArrayList<Car> temp;    private void tempDataTesting() {        carsList.add(new Car("2019 BMW X3 xDrrive30i Sport Utility 4D","624216A","5UXTR9KC59K0RODL",                "Pear White","35,324",true,"Mon, Oct 05, 2020 at 4:40 PM PST","https://media.ed.edmunds-media.com/bmw/x3/2021/oem/2021_bmw_x3_4dr-suv_m40i_fq_oem_2_815.jpg"));        carsList.add(new Car("2019 BMW X3 xDrrive30i Sport Utility 4D","624216A","5UXTR9KC59K0RODL",                "Pear White","35,324",false,"Mon, Oct 05, 2020 at 4:40 PM PST","https://media.ed.edmunds-media.com/bmw/x3/2021/oem/2021_bmw_x3_4dr-suv_m40i_fq_oem_2_815.jpg"));        carsList.add(new Car("2019 BMW X3 xDrrive30i Sport Utility 4D","624216A","5UXTR9KC59K0RODL",                "Pear White","35,324",true,"Mon, Oct 05, 2020 at 4:40 PM PST","https://media.ed.edmunds-media.com/bmw/x3/2021/oem/2021_bmw_x3_4dr-suv_m40i_fq_oem_2_815.jpg"));        carsList.add(new Car("2019 BMW X3 xDrrive30i Sport Utility 4D","624216A","5UXTR9KC59K0RODL",                "Pear White","35,324",false,"Mon, Oct 05, 2020 at 4:40 PM PST","https://media.ed.edmunds-media.com/bmw/x3/2021/oem/2021_bmw_x3_4dr-suv_m40i_fq_oem_2_815.jpg"));        carsList.add(new Car("2019 BMW X3 xDrrive30i Sport Utility 4D","624216A","5UXTR9KC59K0RODL",                "Pear White","35,324",false,"Mon, Oct 05, 2020 at 4:40 PM PST","https://media.ed.edmunds-media.com/bmw/x3/2021/oem/2021_bmw_x3_4dr-suv_m40i_fq_oem_2_815.jpg"));        carsList.add(new Car("2019 BMW X3 xDrrive30i Sport Utility 4D","624216A","5UXTR9KC59K0RODL",                "Pear White","35,324",true,"Mon, Oct 05, 2020 at 4:40 PM PST","https://media.ed.edmunds-media.com/bmw/x3/2021/oem/2021_bmw_x3_4dr-suv_m40i_fq_oem_2_815.jpg"));    }    private ArrayList filterCheck(String key){         temp = new ArrayList<>();        switch (key){            case "ALL":                temp.addAll(carsList);                break;            case "PASS":                ArrayList<Car> newCarPass = new ArrayList<>();                for (Car car : carsList) {                    if (car.isPassedFailed() == true) {                        newCarPass.add(car);                    }                }                temp=newCarPass;                break;            case "FAIL":                ArrayList<Car> newCarFail = new ArrayList<>();                for (Car car : carsList) {                    if (car.isPassedFailed() == false) {                        newCarFail.add(car);                    }                }                temp=newCarFail;                break;            default:        }        setSizeOfArray(temp.size());        return temp;    }    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        carRecyclerView = findViewById(R.id.carRecView);        cBAll = findViewById(R.id.cBAll);        cBPassed = findViewById(R.id.cBPassed);        cBFailed = findViewById(R.id.cBFailed);        txtTotal=findViewById(R.id.txtTotal);        tempDataTesting();        cBAll.setEnabled(false);        cBAll.isChecked();        adapter = new MyAdapter(carsList);        carRecyclerView.setAdapter(adapter);        carRecyclerView.setLayoutManager(new LinearLayoutManager(this));        cBAll.setOnCheckedChangeListener(this);        cBPassed.setOnCheckedChangeListener(this);        cBFailed.setOnCheckedChangeListener(this);    }    @Override    public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {        if(isChecked==true){            switch (buttonView.getId()){                case R.id.cBPassed:                    cBAll.setEnabled(true);                    cBFailed.setEnabled(true);                    cBPassed.setEnabled(false);                    cBAll.setChecked(false);                    cBFailed.setChecked(false);                    txtTotal.setText(temp.size()+"");                    break;                case R.id.cBFailed:                    cBAll.setEnabled(true);                    cBFailed.setEnabled(false);                    cBPassed.setEnabled(true);                    cBAll.setChecked(false);                    cBPassed.setChecked(false);                    break;                case R.id.cBAll:                    cBAll.setEnabled(false);                    cBFailed.setEnabled(true);                    cBPassed.setEnabled(true);                    cBPassed.setChecked(false);                    cBFailed.setChecked(false);                    break;            }            adapter.changeList(filterCheck(buttonView.getTag().toString()));            adapter.notifyItemRangeRemoved(0, adapter.getItemCount());            adapter.notifyDataSetChanged();        }    }    public int getSizeOfArray() {        return sizeOfArray;    }    public void setSizeOfArray(int sizeOfArray) {        this.sizeOfArray = sizeOfArray;    }    public ArrayList<Car> getCarsList() {        return carsList;    }    public void setCarsList(ArrayList<Car> carsList) {        this.carsList = carsList;    }    public ArrayList<Car> getCarListPassed() {        return carListPassed;    }    public void setCarListPassed(ArrayList<Car> carListPassed) {        this.carListPassed = carListPassed;    }    public ArrayList<Car> getCarListFailed() {        return carListFailed;    }    public void setCarListFailed(ArrayList<Car> carListFailed) {        this.carListFailed = carListFailed;    }}//        utils.init();//        cBAll.setText("ALL ("+adapter.getItemCount()+")");//        cBFailed.setText("FAILED ("+")");//        cBPassed.setText("PASSED ("+")");//        cBAll.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {//            @Override//            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {//                if(isChecked==true){//                    cBPassed.setChecked(false);//                    cBFailed.setChecked(false);//                    adapter.notifyItemRangeRemoved(0, adapter.getItemCount());////                    utils.getCarListAll();//                    adapter.changeList(filterCheck("ALL"));//                    adapter.notifyDataSetChanged();////                    newlist////                    oldlist = getList()////                            for item in oldlist////                             if item.ispaseed = ""////                                newlist.add()////////                    adapter.changeList(newList);////                             notifychanged//////                    Toast.makeText(getApplicationContext(),"All Cars",Toast.LENGTH_LONG).show();//                }//            }//        });//        cBPassed.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {//            @Override//            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {//                if(isChecked==true) {//                    adapter.notifyItemRangeRemoved(0, adapter.getItemCount());////                    utils.initDataPassed();//                    adapter.changeList(filterCheck("PASS"));//                    adapter.changeList(utils.initDataPassed());//                    adapter.notifyDataSetChanged();//                    cBAll.setChecked(false);//                    cBFailed.setChecked(false);////                    Toast.makeText(getApplicationContext(),"Passed",Toast.LENGTH_LONG).show();//                }//            }//        });//        cBFailed.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {//            @Override//            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {//                if(isChecked==true){//                    adapter.notifyItemRangeRemoved(0,adapter.getItemCount());////                    adapter.changeList(utils.initDataFailed());//                    adapter.changeList(filterCheck("FAIL"));//                    adapter.notifyDataSetChanged();//                    cBAll.setChecked(false);//                    cBPassed.setChecked(false);//                    Toast.makeText(getApplicationContext(),"Failed",Toast.LENGTH_LONG).show();//                }//            }//        });//    private void setAdapter(){//        Utils ut=new Utils();//        MyAdapter adapter=new MyAdapter(ut.getCarsList());////        RecyclerView.LayoutManager layoutManager=new LinearLayoutManager(getApplicationContext());////        carRecyclerView.setLayoutManager(layoutManager);////        carRecyclerView.setItemAnimator(new DefaultItemAnimator());//////        carRecyclerView.setAdapter(adapter);//        carRecyclerView.setLayoutManager(new LinearLayoutManager(this));////        carRecyclerView.setLayoutManager(new LinearLayoutManager(this));//    }